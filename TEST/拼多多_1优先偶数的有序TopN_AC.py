'''
优先偶数的有序TopN
读入一个数列和N值，返回优先级排序的N个数，满足：
1.所有偶数优先级大于奇数
2.同为奇数/偶数时，数值大的优先级高
输入：用（,）分开的自然数数列和用（;）分开的参数N
输出：N个数
示例：
输入：
555503,772867,756893,339138,399447,40662,859037,628085,855723,974471,599631,636153,581541,174761,948135,411485,554033,858627,402833,546467,574367,360461,566480,755523,222921,164287,420256,40043,977167,543295,944841,917125,331763,188173,353275,175757,950417,284578,617621,546561,913416,258741,260569,630583,252845;10
输出:
913416,566480,420256,339138,284578,40662,977167,974471,950417,948135
'''


if __name__ == '__main__':
    nums, N = input().split(';')
    nums = list(map(int, nums.split(',')))
    N = int(N)
    
    even, odd = [], []
    for num in nums:
        if num % 2 == 0: even.append(num)
        else: odd.append(num)
    even.sort(reverse=True)
    odd.sort(reverse=True)
    if len(even) >= N:
        print(','.join(map(str, even[:N])))
    else:
        even.extend(odd[:N - len(even)])
        print(','.join(map(str, even)))
